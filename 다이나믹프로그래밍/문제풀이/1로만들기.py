"""
정수 x가 주어질 때 정수 x에 사용 할 수 있는 연산은 다음과 같이 4가지 이다.
-x가 5로 나누어떨어지면, 5로 나눈다.
-x가 3으로 나누어떨어지면, 3으로 나눈다.
-x가 2로 나누어떨어지면, 2로 나눈다.
-x엣 1을 뺀다.
정수 x가 주어졌을 때, 연산 4개를 적절히 사용해서 1을 만들려고 한다.
연산을 사용하는 횟수의 최소값을 출력하시오

입력되는 x값은 1~30,000

해결방법
점화식
a_i=min(a_(i-1),a_(i/2),a_(i/3),a_(i/5))+1
+1을 마지막에 하는 이유는 함수의 호출 횟수를 구해야 하기 때문이다.
"""
x=int(input())

#이 리스트에 저장되는 값은 뭔가?
#함수의 호출 횟수 보텀업 방식이므로 현재 함수의 층이 저장되고
#층이 오를때마다 층수가 업데이트 되는방식
d=[0]*30001

#보텀업 방식이다. 1에서 시작해서 x값에 도달하는것이 목적
for i in range(2,x+1):
    d[i]=d[i-1]+1#기본적으로 층수가 1 업데이트 된다.(문제에서 보면 -1을 하는 경우라 볼 수 있다.)

    if i%2==0:
        #i//2-> 인덱스에 대하여 몫 나누기를 하는 이유(리스트 안의 수는 호출 횟수이고 실제적인 값은 인덱스 그 자체)
        d[i]=min(d[i],d[i//2]+1)#단순 -1과 값을 나누기한 것중 호출 횟수가 적은 것을 선택
    if i%3==0:
        d[i]=min(d[i],d[i//3]+1)
    if i%5==0:
        d[i]=min(d[i],d[i//5]+1)

print(d[x])

