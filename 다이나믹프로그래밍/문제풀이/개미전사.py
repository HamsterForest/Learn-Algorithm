"""
개미전사는 부족한 식량을 충당하고자 메뚜기 마을의 식량창고를 몰래 공격하고자 한다.

1. 메뚜기의 식량창고는 여러개가 있으며, 일직선으로 이어져 있다.
2. 각 식량창고에는 정해진수의 식량을 저장하고 있다.
3. 개미전사는 식량창고를 성택적으로 약탈하여 식량을 빼앗을 예정이다.
4. 메뚜기 정찰병들은 일직선상에 존재하는 식량창고중에서 서로 인접한 식량창고가 공격받으면 
알아차릴 수 있다. 따라서 정찰병에게 들키지 않기 위해 최소 한 칸 이상 떨어진 식량창고를 약탈해야한다.

개미 전사를 위해 식량창고 n개에 대한 정보가 주어졌을 때 얻을 수 있는 식량의 최댓값을 구하는 
프로그램을 작성하시오.

창고수  3<=n<=100
각 창고마다저장된 식량 k의 양 0<=k<=1,000

----------------------------------------------------------------------------------------------
-일단 떠오른 생각은. 이게 왜 다이나믹일까. 다이나믹을 써야하는 문제들은 뭘까.
내각 먼저 생각해본 해결법은 모든 경우의수를 계산하여 최대값을 도출 하는 것
조건은 인접한 창고를 선택하지 않는것.

-다이나믹을 이용한다면 해결법은 어떻게 되는가.
가장 중요한것은 점화식을 세우는 것이다.

1. 왼쪽부터 차례대로 식량창고를 턴다고 가정
2. 현재 식량창고를 a_i라고 하여 점화식을 세운다.
3. i-1의 식량창고를 터는경우 현재 식량창고는 털 수 없다.
4. i-2의 식량창고를 터는경우 현재 식량창고를 털 수 있다.
5. 3번과 4번의 경우를 비교하여 더 많은 식량 창고를 털 수 있는 경우를 선택한다.
6. 여기서 i번째 식량창고에 대한 최적의 해를 구할 때 왼쪽부터 (i-3)번째 이햐의 식량창고에
대한 최적의 해에 대해서는 고려할 필요가 없다. (i-1)과 (i-2)를 구하는 과정에 이미
고려되었기 때문이다.


점화식
a_i=max(a_(i-1),a_(i-2)+k_i) 여기서 k_i는 i번째 식량창고에 있는 식량의양이다. i-2를 선택하는경우
현재 창고도 털 수 있기 때문이다.


"""
import sys
n=int(input())
k=[]
k.extend(list(map(int,sys.stdin.readline().split())))

d=[0]*n
d[0]=k[0]
d[1]=max(k[0],k[1])

for i in range(2,n):
    d[i]=max(d[i-1],d[i-2]+k[i])

print(d[n-1])