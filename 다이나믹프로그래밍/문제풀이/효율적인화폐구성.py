"""
n가지 종류의 화폐가 있다. 이 화폐들의 개수를 최소한으로 이용해서 그 가치의 합이 m이 되도록
하려 한다.
1. 각 화폐는 몇 개라도 사용할 수 있다.
2. 사용한 화폐의 구성은 같지만 순서만 다른 것은 같은 경우로 구분한다.

ps. 굉장히 이해하기 어려웠다.

점화식

적은금액부터 큰금액까지 확인하며, 차례대로 만들 수 있는 최소한의 화폐개수를 찾으면 된다.
금액 i를 만들수 있는 최소한의 화폐개수 a_i, 화폐단위를 k라고 했을때 다음과 같은 점화식을 만들수 있다.

a_(i-k)를 만드는 방법이 존재하는 경우
a_i=min(a_i,a_(i-k)+1)

a_(i-k)를 만드는 방법이 존재하지 않는 경우
a_i=10001
"""
#화폐종류 n, 목표금액 m
n,m=map(int,input().split())

array=[]

#화폐단위를 입력받음
for i in range(n):
    array.append(int(input()))

#dp 테이블 초기화
d=[10001]*(m+1)
"""
dp테이블의 역할
-dp테이블에는 인덱스는 어떤 금액을 나타낸다.
-dp테이블의 원소는 인덱스가 가르키는 금액을 만드는데 필요한 동전의수가 저장된다.
"""
d[0]=0

for i in range(n):
    for j in range(array[i],m+1):
        if d[j-array[i]]!=10001:
            d[j]=min(d[j],d[j-array[i]]+1)


if d[m]==10001:
    print(-1)
else:
    print(d[m])