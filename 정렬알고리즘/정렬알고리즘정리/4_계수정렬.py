"""
개요 : 특정한 조건이 부합 할 때만 사용할 수 있지만 매우 빠른 정렬 알고리즘

조건 : 데이터의 크기 범위가 제한 되어 정수 형태로 표현할 수 있을 때
-만약 데이터의 값이 무한한 범위를 가지는 실수형 데이터라면, 계수정렬을 사용하기는 어렵다.
-일반적으로 가장 큰 데이터와 작은 데이터의 차이가 1,000,000을 넘지 않을 때 효과적으로 사용 할 수 있다.

조건을 가지는 이유 : 모든 범위를 담을 수 있는 크기의 리스트를 선언 해야 하기 때문이다.
                    선택,삽입,퀵 처럼 비교기반의 정렬알고리즘이 아니다.

과정
1. 정렬을 할 데이터의 범위가 모두 담길수 있는 리스트 하나(결과리스트)를 모두 0으로 초기화하여 생성
-만약 가장작은수가 0 가장큰수가 9라면 10의 길이를 가진 리스트 하나를 초기화 한다.
2. 정렬할 데이터의 원소들을 하나씩 확인하면서, 그 데이터의 값과 동일한 인덱스의 데이터를
1씩 정렬

-> 결과적으로 '결과리스트'에는 각 데이터가 몇 번 등장했는지 그 횟수가 기록된다.


시간복잡도 : O(N+K)
공간복잡도 : 때에 따라 심각한 비효율성을 초래할 수 있다.
            만약 데이터가 0과 999,999 단 2개면, '결과리스트'의 크기가 100만이 되어야 한다.

"""

array=[7,5,9,0,3,1,6,2,9,1,4,8,0,5,2]#정렬할 데이터 모든 데이터가 0~9사이에 있다.
result_array=[0]*(max(array)+1)

for i in range(len(array)):
    result_array[array[i]]+=1

print(result_array)

for i in range(len(result_array)):
    for j in range(result_array[i]):
        print(i, end=' ')